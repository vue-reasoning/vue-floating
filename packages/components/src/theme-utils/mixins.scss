@use 'sass:list' as list;
@use 'sass:map' as map;
@use 'functions';

@mixin use-css-var-declare($variables, $theme: $default-theme, $props...) {
  $normalized: normalize-theme-and-props($theme, $props...);

  @each $prop in $props {
    #{get-css-var-name($variables, $prop)}: get-css-value(
      $variables,
      $prop,
      map.get($normalized, 'theme')
    );
  }
}

@mixin use-css-var-declare-dark($variables, $props...) {
  @include use-css-var-declare($variables, $variable-key-theme-dark, $props...);
}

@mixin use-css-var-style($variables, $theme: $default-theme, $props...) {
  $normalized: normalize-theme-and-props($theme, $props...);

  @each $prop in $props {
    #{get-css-prop($variables, $prop)}: get-css-var-value(
      $variables,
      $prop,
      map.get($normalized, 'theme')
    );
  }
}

//
// Data Placement
//

@mixin with-placement($placement: '', $root: '') {
  #{$root + get-placement-selector($placement)} {
    @content;
  }
}
